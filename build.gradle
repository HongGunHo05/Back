plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Database
    runtimeOnly 'org.postgresql:postgresql'

    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // OpenAI API
    implementation 'com.theokanning.openai-gpt3-java:api:0.12.0'
    implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Google API Client Library (Google ID Token validation)
    implementation 'com.google.api-client:google-api-client:1.32.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    implementation 'com.google.http-client:google-http-client-jackson2:1.32.1'

    // Validation
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Servlet API
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // Spring AI
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:1.0.0-M2"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootWar {
    archiveBaseName.set('back')
    archiveFileName.set('back.war')
    archiveVersion.set('0.0.0')
    enabled = true
}

bootJar {
    enabled = false
}

task copyEnvFile(type: Copy) {
    from '.env'
    into 'build/resources/main'
}
processResources.dependsOn(copyEnvFile)
